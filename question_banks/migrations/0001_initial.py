# Generated by Django 4.2.10 on 2025-08-18 06:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("questions", "0005_remove_old_fields"),
    ]

    operations = [
        migrations.CreateModel(
            name="QuestionBank",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Bank nomi")),
                ("description", models.TextField(blank=True, verbose_name="Tavsif")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Qoralama"),
                            ("active", "Faol"),
                            ("archived", "Arxivlangan"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Holat",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "expert",
                    models.ForeignKey(
                        limit_choices_to={"role": "EXPERT"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="managed_banks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Ekspert",
                    ),
                ),
                (
                    "fan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="question_banks",
                        to="questions.fan",
                        verbose_name="Fan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Savollar banki",
                "verbose_name_plural": "Savollar banklari",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TestBook",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Kitob nomi")),
                ("description", models.TextField(blank=True, verbose_name="Tavsif")),
                (
                    "variants_count",
                    models.IntegerField(
                        default=4,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Variantlar soni",
                    ),
                ),
                (
                    "questions_per_variant",
                    models.IntegerField(
                        default=30,
                        validators=[
                            django.core.validators.MinValueValidator(10),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Har variantdagi savollar",
                    ),
                ),
                (
                    "time_limit",
                    models.IntegerField(
                        default=180,
                        validators=[
                            django.core.validators.MinValueValidator(30),
                            django.core.validators.MaxValueValidator(300),
                        ],
                        verbose_name="Vaqt limiti (daqiqa)",
                    ),
                ),
                (
                    "passing_score",
                    models.IntegerField(
                        default=60,
                        validators=[
                            django.core.validators.MinValueValidator(40),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="O'tish balli (%)",
                    ),
                ),
                (
                    "easy_percentage",
                    models.IntegerField(
                        default=30,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Oson savollar %",
                    ),
                ),
                (
                    "medium_percentage",
                    models.IntegerField(
                        default=50,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="O'rta savollar %",
                    ),
                ),
                (
                    "hard_percentage",
                    models.IntegerField(
                        default=20,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Qiyin savollar %",
                    ),
                ),
                (
                    "shuffle_questions",
                    models.BooleanField(
                        default=True, verbose_name="Savollarni aralashtirish"
                    ),
                ),
                (
                    "shuffle_options",
                    models.BooleanField(
                        default=True, verbose_name="Javoblarni aralashtirish"
                    ),
                ),
                (
                    "show_results",
                    models.BooleanField(
                        default=True, verbose_name="Natijalarni ko'rsatish"
                    ),
                ),
                (
                    "allow_review",
                    models.BooleanField(
                        default=False, verbose_name="Tekshirishga ruxsat"
                    ),
                ),
                (
                    "require_auth",
                    models.BooleanField(
                        default=True, verbose_name="Autentifikatsiya talab qilish"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Qoralama"),
                            ("published", "Nashr etilgan"),
                            ("archived", "Arxivlangan"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Holat",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "total_attempts",
                    models.IntegerField(default=0, verbose_name="Jami urinishlar"),
                ),
                ("total_score", models.FloatField(default=0, verbose_name="Jami ball")),
                (
                    "share_link",
                    models.URLField(blank=True, verbose_name="Ulashish havolasi"),
                ),
                ("qr_code", models.TextField(blank=True, verbose_name="QR kod")),
                (
                    "bank",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="test_books",
                        to="question_banks.questionbank",
                        verbose_name="Savollar banki",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_books",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Yaratgan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Test kitobi",
                "verbose_name_plural": "Test kitoblari",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TestVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("variant_number", models.IntegerField(verbose_name="Variant raqami")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="question_banks.testbook",
                        verbose_name="Kitob",
                    ),
                ),
            ],
            options={
                "verbose_name": "Test varianti",
                "verbose_name_plural": "Test variantlari",
                "ordering": ["variant_number"],
                "unique_together": {("book", "variant_number")},
            },
        ),
        migrations.CreateModel(
            name="TestAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.FloatField(default=0, verbose_name="Ball")),
                (
                    "correct_answers",
                    models.IntegerField(default=0, verbose_name="To'g'ri javoblar"),
                ),
                (
                    "wrong_answers",
                    models.IntegerField(default=0, verbose_name="Noto'g'ri javoblar"),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "time_spent",
                    models.IntegerField(
                        default=0, verbose_name="Sarflangan vaqt (soniya)"
                    ),
                ),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attempts",
                        to="question_banks.testbook",
                        verbose_name="Kitob",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="test_attempts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Foydalanuvchi",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attempts",
                        to="question_banks.testvariant",
                        verbose_name="Variant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Test urinishi",
                "verbose_name_plural": "Test urinishlari",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="BankOrder",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "total_questions",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(10),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Jami savollar",
                    ),
                ),
                (
                    "easy_count",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Oson savollar",
                    ),
                ),
                (
                    "medium_count",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="O'rta savollar",
                    ),
                ),
                (
                    "hard_count",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Qiyin savollar",
                    ),
                ),
                ("deadline", models.DateTimeField(verbose_name="Muddat")),
                ("notes", models.TextField(blank=True, verbose_name="Izohlar")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Kutilmoqda"),
                            ("processing", "Jarayonda"),
                            ("completed", "Bajarildi"),
                            ("cancelled", "Bekor qilindi"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Holat",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "admin",
                    models.ForeignKey(
                        limit_choices_to={"role": "ADMIN"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_orders",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Admin",
                    ),
                ),
                (
                    "bank",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="question_banks.questionbank",
                        verbose_name="Bank",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bank buyurtmasi",
                "verbose_name_plural": "Bank buyurtmalari",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="VariantQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.IntegerField(verbose_name="Tartib")),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="questions.question",
                        verbose_name="Savol",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="question_banks.testvariant",
                        verbose_name="Variant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Variant savoli",
                "verbose_name_plural": "Variant savollari",
                "ordering": ["order"],
                "unique_together": {("variant", "question")},
            },
        ),
        migrations.CreateModel(
            name="BankQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                (
                    "added_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Qo'shgan",
                    ),
                ),
                (
                    "bank",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="question_banks.questionbank",
                        verbose_name="Bank",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="questions.question",
                        verbose_name="Savol",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bank savoli",
                "verbose_name_plural": "Bank savollari",
                "ordering": ["-added_at"],
                "unique_together": {("bank", "question")},
            },
        ),
    ]
