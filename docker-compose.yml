version: '3.8'

services:
  # PostgreSQL ma'lumotlar bazasi
  db:
    image: postgres:15-alpine
    container_name: dtm_postgres
    environment:
      POSTGRES_DB: dtm_test_platform
      POSTGRES_USER: dtm_user
      POSTGRES_PASSWORD: dtm_password_2024
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dtm_user -d dtm_test_platform"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dtm_network

  # Django backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dtm_backend
    command: sh -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8001 --workers 4 --reload"
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8001:8001"
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-docker-dev-key-change-in-production
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_NAME=dtm_test_platform
      - DATABASE_USER=dtm_user
      - DATABASE_PASSWORD=dtm_password_2024
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3001,http://127.0.0.1:3001
    depends_on:
      db:
        condition: service_healthy
    networks:
      - dtm_network
    restart: unless-stopped

  # Ollama AI xizmati (ixtiyoriy)
  ollama:
    image: ollama/ollama:latest
    container_name: dtm_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - dtm_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  ollama_data:
    driver: local

networks:
  dtm_network:
    driver: bridge
